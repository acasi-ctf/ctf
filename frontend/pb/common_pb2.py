# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='common.proto',
  package='ctf',
  syntax='proto3',
  serialized_options=b'\n\026org.acasictf.ctf.protoZ\033github.com/acasi-ctf/ctf/pb',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x0c\x63ommon.proto\x12\x03\x63tf\"\x18\n\x04UUID\x12\x10\n\x08\x63ontents\x18\x01 \x01(\tB5\n\x16org.acasictf.ctf.protoZ\x1bgithub.com/acasi-ctf/ctf/pbb\x06proto3'
)




_UUID = _descriptor.Descriptor(
  name='UUID',
  full_name='ctf.UUID',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='contents', full_name='ctf.UUID.contents', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=21,
  serialized_end=45,
)

DESCRIPTOR.message_types_by_name['UUID'] = _UUID
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

UUID = _reflection.GeneratedProtocolMessageType('UUID', (_message.Message,), {
  'DESCRIPTOR' : _UUID,
  '__module__' : 'common_pb2'
  # @@protoc_insertion_point(class_scope:ctf.UUID)
  })
_sym_db.RegisterMessage(UUID)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
